name: Generate and Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install cantools
        run: |
          python -m pip install --upgrade pip
          pip install cantools

      - name: Generate C source from DBC
        run: |
          mkdir -p src/
          python -m cantools generate_c_source r3.dbc --output-directory src/
          echo "Generated C source files from DBC."

      - name: Create library.properties
        run: |
          cat <<EOF > library.properties
          name=Haltech-CAN
          version=1.0.0
          author=Colorado State FSAE
          maintainer=Colorado State FSAE
          sentence=A library for integrating Teensy 4.x with Haltech CAN bus messages.
          paragraph=This library provides constructors for all current Haltech CAN messages.
          category=Communication
          url=https://github.com/ColoradoStateFSAE/Haltech-CAN
          architectures=*
          depends=
          EOF
          echo "library.properties created."

      - name: Determine new version
        id: version
        run: |
          git fetch --tags

          LATEST_TAG=$(git tag -l | sort -V | tail -n 1)
          if [ -z "$LATEST_TAG" ]; then
            VERSION="1.0.0"
          else
            VERSION=$(echo $LATEST_TAG | awk -F. '{printf "%d.%d.%d", $1, $2, $3+1}')
          fi

          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Determined version: $VERSION"

      - name: Zip library files
        run: |
          mkdir Haltech-CAN
          cp src/r3.c src/r3.h library.properties Haltech-CAN/
          zip -r Haltech-CAN-${{ env.VERSION }}.zip Haltech-CAN/
          echo "Library files zipped."

      - name: Commit and push generated source
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add src/ library.properties
          git commit -m "Auto-generate C source and set version $VERSION" || echo "No changes to commit"
          git push

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          commit: main
          draft: false
          prerelease: false
          generateReleaseNotes: true

      - name: Upload ZIP file to release
        uses: softprops/action-gh-release@v1
        with:
          files: Haltech-CAN-${{ env.VERSION }}.zip
          tag_name: ${{ env.VERSION }}
          fail_on_unmatched_files: true
